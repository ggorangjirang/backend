spring:
  application:
    name: ggorangjirang

  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${CLIENT_ID}
            client-secret: ${CLIENT_SECRET}
            redirect-uri: http://localholst:3000/login/oauth2/code/kakao
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            scope: profile_nickname, account_email
            client-name: Kakao
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

  mail:
    host: smtp.naver.com
    port: 465
    username: ${ADMIN_EMAIL_NAME}
    password: ${ADMIN_EMAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          ssl:
            enable: true
          starttls:
            enable: true
            required: true

  servlet:
    multipart:
      max-file-size=10MB
      max-request-size=10MB

jwt:
  secretKey: ${JWT_SECRET_KEY}

  access:
    expiration: 3600000 # 1시간
    header: Authorization

  refresh:
    expiration: 1209600000 # 2주
    header: Refresh-Token

cloud:
  aws:
    credentials:
      secret-key: ${AWS_S3_SECRET_KEY}
      access-key: ${AWS_S3_ACCESS_KEY}

    s3:
      bucket: ggorangjirang-s3
      product-image-path: images/products/
      review-image-path: images/reviews/
      description-image-path: images/descriptions/

    region:
      static: ap-northeast-2

    stack:
      auto: 'false'

discord:
  webhook:
    url: ${DISCORD_URL}

management:
  endpoints:
    web:
      exposure:
        include: "*"
    prometheus:
      enabled: true
    metrics:
      enabled: true


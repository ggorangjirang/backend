variables:
  IMAGE_NAME: junyhehe/ggorangjirang
  IMAGE_TAG: "1.0"

stages:
  - compile
  - test
  - build
  - deploy

compile:
  stage: compile
  before_script:
    - export PATH="/home/ubuntu/.sdkman/candidates/gradle/current/bin:$PATH"
  script:
    - gradle build --exclude-task test
  tags:
    - junylocal
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH

test:
  stage: test
  before_script:
    - export PATH="/home/ubuntu/.sdkman/candidates/gradle/current/bin:$PATH"
  script:
    - cat $ENV_YML > src/main/resources/env.yml
    - gradle build test
  tags:
    - junylocal
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH

build:
  stage: build
  image: docker:26.1.3
  services:
    - docker:26.1.3-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - cat $ENV_YML > src/main/resources/env.yml
    - echo $DOCKER_REGISTRY_PASS | docker login --username $DOCKER_REGISTRY_USER --password-stdin
  script:
    - docker build -t $IMAGE_NAME:$IMAGE_TAG .
    - docker push $IMAGE_NAME:$IMAGE_TAG
  tags:
    - junylocal
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "dev"
      when: manual
      allow_failure: true

deploy:
  stage: deploy
  before_script:
    - chmod 400 $SSH_KEY
    - mkdir -p ~/.ssh
    - ssh-keyscan -H 34.64.229.17 >> ~/.ssh/known_hosts
  script:
    - ssh -i $SSH_KEY elice@34.64.229.17 "echo $DOCKER_REGISTRY_PASS | docker login --username $DOCKER_REGISTRY_USER --password-stdin && docker rm app -f || true && docker pull $IMAGE_NAME:$IMAGE_TAG && docker run -d -p 8080:8080 --name app --network elice $IMAGE_NAME:$IMAGE_TAG"
  tags:
    - junylocal
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "dev"
      when: manual
      allow_failure: true
